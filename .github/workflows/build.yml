name: Check and Test

on: [push, pull_request]

jobs:
  check:
    name: Type checking
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [nightly]
        os: [ubuntu-latest, windows-latest]
        target: [thumbv7em-none-eabihf]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache target
        uses: actions/cache@v1
        env:
          cache-name: target
        with:
          path: ./target
          key: ${{ matrix.os }}-typecheck-target-${{ matrix.rust }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      # everything
      - name: Run `cargo check`
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target ${{ matrix.target }}

  test:
    name: Test suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [nightly]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache target
        uses: actions/cache@v1
        env:
          cache-name: target
        with:
          path: ./target
          key: ${{ matrix.os }}-test-target-${{ matrix.rust }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      # everything
      - name: Run `cargo test`
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib

#  fmt:
#    name: Formatting
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v2
#
#      - name: Install toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          # pinned to avoid missing component
#          toolchain: nightly-2020-03-19
#          override: true
#
#      - name: Install rustfmt
#        run: rustup component add rustfmt
#
#      - name: Run `cargo fmt -- --check`
#        uses: actions-rs/cargo@v1
#        with:
#          command: fmt
#          args: -- --check
#
#  clippy:
#    name: Clippy
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v2
#
#      - name: Cache target
#        uses: actions/cache@v1
#        env:
#          cache-name: clippy
#        with:
#          path: ./target
#          key: ubuntu-latest-clippy-target-stable
#
#      - name: Install toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: nightly
#          override: true
#
#      - name: Run `cargo clippy`
#        uses: actions-rs/clippy-check@v1
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#
#  documentation:
#    name: Documentation
#    runs-on: ubuntu-latest
#    # ensure docs only get pushed if everything else is successful
#    needs: [check, test, fmt, clippy]
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Cache target
#        uses: actions/cache@v1
#        env:
#          cache-name: target
#        with:
#          path: ./target
#          key: ubuntu-latest-docs-target-nightly-2020-03-19
#
#      - name: Install toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          # pinned to avoid missing component
#          toolchain: nightly-2020-03-19
#          override: true
#
#      - name: Run `cargo doc --all-features`
#        uses: actions-rs/cargo@v1
#        with:
#          command: doc
#          args: --all-features
